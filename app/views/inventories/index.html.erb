<% content_for :ribbon do %>
  <div id="ribbon">
    <span class="ribbon-button-alignment">
      <span id="refresh" class="btn btn-ribbon" data-action="resetWidgets" data-title="refresh"  rel="tooltip" data-placement="bottom" data-original-title="<i class='text-warning fa fa-warning'></i> Warning! This will reset all your widget settings." data-html="true">
        <i class="fa fa-refresh"></i>
      </span>
    </span>

    <ol class="breadcrumb">
      <li>Home</li>
      <li>Inventroy</li>
      <li>Inventory Index</li>
    </ol>
  </div>
<% end %>

<div id="content">
  <section id="widget-grid" class="">
    <div class="row"> 
      <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <div class="jarviswidget jarviswidget-color-darken" id="wid-id-1" data-widget-editbutton="false"  data-widget-deletebutton="false" data-widget-colorbutton="false" data-widget-collapsed="flase" >
          <header>
            <span class="widget-icon"> <i class="fa fa-table"></i> </span>
            <h2>Inventory Index </h2>
          </header>
          <div>
            <div class="jarviswidget-editbox">
            </div>
            <div class="widget-body no-padding" id="inventory_index">
              <table id="dt_basic" class="table table-striped table-bordered table-hover" width="100%">
                <thead>
                  <tr>
                    <th data-hide="phone">SKU #</th>
                    <th data-class="expand"><i class="fa fa-fw fa-user text-muted hidden-md hidden-sm hidden-xs"></i> Prudct Name</th>
                    <th data-hide="phone"><i class="fa fa-fw fa-phone text-muted hidden-md hidden-sm hidden-xs"></i> Supplier</th>
                    <th>Product type</th>
                    <th data-hide="phone,tablet"><i class="fa fa-fw fa-map-marker txt-color-blue hidden-md hidden-sm hidden-xs"></i> Brand</th>
                    <th data-hide="phone,tablet">Buy Price</th>
                    <th data-hide="phone,tablet">Retail Price</th>
                    <th data-hide="phone,tablet">Quantity</th>
                  </tr>
                </thead>
                <tbody>
                  <% (0...@supply.length).each do |i| %> 
                    <tr>
                      <td><%= link_to "#{@supply[i].sku }", edit_inventory_path(@supply[i].id), method: :get ,remote: true, class: "link_color" %></td>
                      <td><%= link_to "#{@supply[i].product_name}", edit_inventory_path(@supply[i].id), method: :get ,remote: true, class: "link_color"  %></td>
                      <td><%= link_to "#{@supply[i].company.name}", edit_inventory_path(@supply[i].id), method: :get ,remote: true, class: "link_color" %></td>
                      <td><%= link_to "#{@supply[i].product_type}", edit_inventory_path(@supply[i].id), method: :get ,remote: true, class: "link_color" %></td>
                      <td><%= link_to "#{@supply[i].brand}", edit_inventory_path(@supply[i].id), method: :get ,remote: true, class: "link_color" %></td>
                      <td><%= link_to "#{ number_to_currency(@supply[i].buy_price)}", edit_inventory_path(@supply[i].id), method: :get ,remote: true, class: "link_color" %></td>
                      <td><%= link_to "#{ number_to_currency(@supply[i].retail_price)}", edit_inventory_path(@supply[i].id), method: :get ,remote: true, class: "link_color" %></td>
                      <td><%= link_to "#{@supply[i].quantity}", inventory_path(@supply[i].id), method: :get ,remote: true, class: "link_color" %></td>
                    </tr>
                    <% end %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </article>
    </div>
  </section>
</div>

<div id="myModal" class="modal">
  <div id="modal-content">
    <span class="close">&times;</span>
  </div>
</div>

<% content_for :scripts do %>
  <script>
    var modal = document.getElementById('myModal');
    var btn = document.getElementById("myBtn");
    var span = document.getElementsByClassName("close")[0];

    $( ".link_color" ).click(function() {
      modal.style.display = "block";
    });

    span.onclick = function() {
      modal.style.display = "none";
    }

    window.onclick = function(event) {
      if (event.target == modal) {
        modal.style.display = "none";
      }
    }
  </script>

  <script type="text/javascript">
    // DO NOT REMOVE : GLOBAL FUNCTIONS
    $(document).ready(function() {
      pageSetUp();
      /* // DOM Position key index //
       l - Length changing (dropdown)
       f - Filtering input (search)
       t - The Table! (datatable)
       i - Information (records)
       p - Pagination (paging)
       r - pRocessing
       < and > - div elements
       <"#id" and > - div with an id
       <"class" and > - div with a class
       <"#id.class" and > - div with an id and class

       Also see: http://legacy.datatables.net/usage/features
       */

      /* BASIC ;*/
      var responsiveHelper_dt_basic = undefined;
      var responsiveHelper_datatable_fixed_column = undefined;
      var responsiveHelper_datatable_col_reorder = undefined;
      var responsiveHelper_datatable_tabletools = undefined;
      var breakpointDefinition = {
        tablet : 1024,
        phone : 480
      };
      $('#dt_basic').dataTable({
        "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>"+
        "t"+
        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
        "autoWidth" : true,
        "oLanguage": {
          "sSearch": '<span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>'
        },
        "preDrawCallback" : function() {
          // Initialize the responsive datatables helper once.
          if (!responsiveHelper_dt_basic) {
            responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
          }
        },
        "rowCallback" : function(nRow) {
          responsiveHelper_dt_basic.createExpandIcon(nRow);
        },
        "drawCallback" : function(oSettings) {
          responsiveHelper_dt_basic.respond();
        }
      });
      /* END BASIC */
      /* COLUMN FILTER  */
      var otable = $('#datatable_fixed_column').DataTable({
        //"bFilter": false,
        //"bInfo": false,
        //"bLengthChange": false
        //"bAutoWidth": false,
        //"bPaginate": false,
        //"bStateSave": true // saves sort state using localStorage
        "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>"+
        "t"+
        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
        "autoWidth" : true,
        "oLanguage": {
          "sSearch": '<span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>'
        },
        "preDrawCallback" : function() {
          // Initialize the responsive datatables helper once.
          if (!responsiveHelper_datatable_fixed_column) {
            responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
          }
        },
        "rowCallback" : function(nRow) {
          responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
        },
        "drawCallback" : function(oSettings) {
          responsiveHelper_datatable_fixed_column.respond();
        }
      });

      // custom toolbar
      $("div.toolbar").html('<div class="text-right"><%= image_tag 'logo.png', alt: 'SmartAdmin', style: 'width: 111px; margin-top: 3px; margin-right: 10px;' %></div>');
      // Apply the filter
      $("#datatable_fixed_column thead th input[type=text]").on( 'keyup change', function () {
        otable
          .column( $(this).parent().index()+':visible' )
          .search( this.value )
          .draw();
      } );
      /* END COLUMN FILTER */
      /* COLUMN SHOW - HIDE */
      $('#datatable_col_reorder').dataTable({
        "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>"+
        "t"+
        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
        "autoWidth" : true,
        "oLanguage": {
          "sSearch": '<span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>'
        },
        "preDrawCallback" : function() {
          // Initialize the responsive datatables helper once.
          if (!responsiveHelper_datatable_col_reorder) {
            responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
          }
        },
        "rowCallback" : function(nRow) {
          responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
        },
        "drawCallback" : function(oSettings) {
          responsiveHelper_datatable_col_reorder.respond();
        }
      });

      /* END COLUMN SHOW - HIDE */

      /* TABLETOOLS */
      $('#datatable_tabletools').dataTable({

        // Tabletools options:
        //   https://datatables.net/extensions/tabletools/button_options
        "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>"+
        "t"+
        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
        "oLanguage": {
          "sSearch": '<span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>'
        },
        "oTableTools": {
          "aButtons": [
            "copy",
            "csv",
            "xls",
            {
              "sExtends": "pdf",
              "sTitle": "SmartAdmin_PDF",
              "sPdfMessage": "SmartAdmin PDF Export",
              "sPdfSize": "letter"
            },
            {
              "sExtends": "print",
              "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
            }
          ],
          "sSwfPath": "js/plugin/datatables/swf/copy_csv_xls_pdf.swf"
        },
        "autoWidth" : true,
        "preDrawCallback" : function() {
          // Initialize the responsive datatables helper once.
          if (!responsiveHelper_datatable_tabletools) {
            responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
          }
        },
        "rowCallback" : function(nRow) {
          responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
        },
        "drawCallback" : function(oSettings) {
          responsiveHelper_datatable_tabletools.respond();
        }
      });

      /* END TABLETOOLS */
          
    });
     
  </script>
<% end %>
