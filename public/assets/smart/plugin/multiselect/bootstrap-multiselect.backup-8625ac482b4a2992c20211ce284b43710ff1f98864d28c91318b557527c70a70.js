/**
 * bootstrap-multiselect.js
 * https://github.com/davidstutz/bootstrap-multiselect
 *
 * Copyright 2012, 2013 David Stutz
 * 
 * Dual licensed under the BSD-3-Clause and the Apache License, Version 2.0.
 */
!function(t){"use strict";function e(e,i){this.options=this.mergeOptions(i),this.$select=t(e),this.originalOptions=this.$select.clone()[0].options,this.query="",this.searchTimeout=null,this.options.multiple="multiple"==this.$select.attr("multiple"),this.options.onChange=t.proxy(this.options.onChange,this),this.buildContainer(),this.buildButton(),this.buildSelectAll(),this.buildDropdown(),this.buildDropdownOptions(),this.buildFilter(),this.updateButtonText(),this.$select.hide().after(this.$container)}"undefined"!=typeof ko&&ko.bindingHandlers&&!ko.bindingHandlers.multiselect&&(ko.bindingHandlers.multiselect={init:function(t,e,i,s,l){},update:function(e,i,s,l,n){var o=t(e).data("multiselect");o?s().options&&s().options().length!==o.originalOptions.length&&(o.updateOriginalOptions(),t(e).multiselect("rebuild")):t(e).multiselect(ko.utils.unwrapObservable(i()))}}),e.prototype={defaults:{buttonText:function(e,i){if(0==e.length)return this.nonSelectedText+' <b class="caret"></b>';if(e.length>3)return e.length+" "+this.nSelectedText+' <b class="caret"></b>';var s="";return e.each(function(){var e=void 0!==t(this).attr("label")?t(this).attr("label"):t(this).html();s+=e+", "}),s.substr(0,s.length-2)+' <b class="caret"></b>'},buttonTitle:function(e,i){if(0==e.length)return this.nonSelectedText;var s="";return e.each(function(){s+=t(this).text()+", "}),s.substr(0,s.length-2)},onChange:function(t,e){},buttonClass:"btn",dropRight:!1,selectedClass:"active",buttonWidth:"auto",buttonContainer:'<div class="btn-group" />',maxHeight:!1,includeSelectAllOption:!1,selectAllText:" Select all",selectAllValue:"multiselect-all",enableFiltering:!1,enableCaseInsensitiveFiltering:!1,filterPlaceholder:"Search",filterBehavior:"text",preventInputChangeEvent:!1,nonSelectedText:"None selected",nSelectedText:"selected"},templates:{button:'<button type="button" class="multiselect dropdown-toggle" data-toggle="dropdown"></button>',ul:'<ul class="multiselect-container dropdown-menu"></ul>',filter:'<div class="input-group"><span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span><input class="form-control multiselect-search" type="text"></div>',li:'<li><a href="javascript:void(0);"><label></label></a></li>',liGroup:'<li><label class="multiselect-group"></label></li>'},constructor:e,buildContainer:function(){this.$container=t(this.options.buttonContainer)},buildButton:function(){this.$button=t(this.templates.button).addClass(this.options.buttonClass),this.$select.prop("disabled")?this.disable():this.enable(),this.options.buttonWidth&&this.$button.css({width:this.options.buttonWidth});var e=this.$select.attr("tabindex");e&&this.$button.attr("tabindex",e),this.$container.prepend(this.$button)},buildDropdown:function(){this.$ul=t(this.templates.ul),this.options.dropRight&&this.$ul.addClass("pull-right"),this.options.maxHeight&&this.$ul.css({"max-height":this.options.maxHeight+"px","overflow-y":"auto","overflow-x":"hidden"}),this.$container.append(this.$ul)},buildDropdownOptions:function(){this.$select.children().each(t.proxy(function(e,i){var s=t(i).prop("tagName").toLowerCase();"optgroup"==s?this.createOptgroup(i):"option"==s&&this.createOptionValue(i)},this)),t("li input",this.$ul).on("change",t.proxy(function(e){var i=t(e.target).prop("checked")||!1,s=t(e.target).val()==this.options.selectAllValue;this.options.selectedClass&&(i?t(e.target).parents("li").addClass(this.options.selectedClass):t(e.target).parents("li").removeClass(this.options.selectedClass));var l=t(e.target).val(),n=this.getOptionByValue(l),o=t("option",this.$select).not(n),a=t("input",this.$container).not(t(e.target));return s&&a.filter(function(){return t(this).is(":checked")!=i}).trigger("click"),i?(n.prop("selected",!0),this.options.multiple?n.prop("selected",!0):(this.options.selectedClass&&t(a).parents("li").removeClass(this.options.selectedClass),t(a).prop("checked",!1),o.prop("selected",!1),this.$button.click()),"active"==this.options.selectedClass&&o.parents("a").css("outline","")):n.prop("selected",!1),this.updateButtonText(),this.$select.change(),this.options.onChange(n,i),this.options.preventInputChangeEvent?!1:void 0},this)),t("li a",this.$ul).on("touchstart click",function(e){e.stopPropagation(),t(e.target).blur()}),this.$container.on("keydown",t.proxy(function(e){if(!t('input[type="text"]',this.$container).is(":focus"))if(9!=e.keyCode&&27!=e.keyCode||!this.$container.hasClass("open")){var i=t(this.$container).find("li:not(.divider):visible a");if(!i.length)return;var s=i.index(i.filter(":focus"));38==e.keyCode&&s>0?s--:40==e.keyCode&&s<i.length-1?s++:~s||(s=0);var l=i.eq(s);if(l.focus(),32==e.keyCode||13==e.keyCode){var n=l.find("input");n.prop("checked",!n.prop("checked")),n.change()}e.stopPropagation(),e.preventDefault()}else this.$button.click()},this))},createOptionValue:function(e){t(e).is(":selected")&&t(e).prop("selected",!0);var i=t(e).attr("label")||t(e).html(),s=t(e).val(),l=this.options.multiple?"checkbox":"radio",n=t(this.templates.li);t("label",n).addClass(l),t("label",n).append('<input type="'+l+'" />');var o=t(e).prop("selected")||!1,a=t("input",n);a.val(s),s==this.options.selectAllValue&&a.parent().parent().addClass("multiselect-all"),t("label",n).append(" "+i),this.$ul.append(n),t(e).is(":disabled")&&a.attr("disabled","disabled").prop("disabled",!0).parents("li").addClass("disabled"),a.prop("checked",o),o&&this.options.selectedClass&&a.parents("li").addClass(this.options.selectedClass)},createOptgroup:function(e){var i=t(e).prop("label"),s=t(this.templates.liGroup);t("label",s).text(i),this.$ul.append(s),t("option",e).each(t.proxy(function(t,e){this.createOptionValue(e)},this))},buildSelectAll:function(){var t=this.$select[0][0]?this.$select[0][0].value==this.options.selectAllValue:!1;this.options.includeSelectAllOption&&this.options.multiple&&!t&&this.$select.prepend('<option value="'+this.options.selectAllValue+'">'+this.options.selectAllText+"</option>")},buildFilter:function(){if(this.options.enableFiltering||this.options.enableCaseInsensitiveFiltering){var e=Math.max(this.options.enableFiltering,this.options.enableCaseInsensitiveFiltering);this.$select.find("option").length>=e&&(this.$filter=t(this.templates.filter),t("input",this.$filter).attr("placeholder",this.options.filterPlaceholder),this.$ul.prepend(this.$filter),this.$filter.val(this.query).on("click",function(t){t.stopPropagation()}).on("keydown",t.proxy(function(e){clearTimeout(this.searchTimeout),this.searchTimeout=this.asyncFunction(t.proxy(function(){this.query!=e.target.value&&(this.query=e.target.value,t.each(t("li",this.$ul),t.proxy(function(e,i){var s=t("input",i).val();if(s!=this.options.selectAllValue){var l=t("label",i).text(),s=t("input",i).val();if(s&&l&&s!=this.options.selectAllValue){var n=!1,o="";("text"==this.options.filterBehavior||"both"==this.options.filterBehavior)&&(o=l),("value"==this.options.filterBehavior||"both"==this.options.filterBehavior)&&(o=s),this.options.enableCaseInsensitiveFiltering&&o.toLowerCase().indexOf(this.query.toLowerCase())>-1?n=!0:o.indexOf(this.query)>-1&&(n=!0),n?t(i).show():t(i).hide()}}},this)))},this),300,this)},this)))}},destroy:function(){this.$container.remove(),this.$select.show()},refresh:function(){t("option",this.$select).each(t.proxy(function(e,i){var s=t("li input",this.$ul).filter(function(){return t(this).val()==t(i).val()});t(i).is(":selected")?(s.prop("checked",!0),this.options.selectedClass&&s.parents("li").addClass(this.options.selectedClass)):(s.prop("checked",!1),this.options.selectedClass&&s.parents("li").removeClass(this.options.selectedClass)),t(i).is(":disabled")?s.attr("disabled","disabled").prop("disabled",!0).parents("li").addClass("disabled"):s.prop("disabled",!1).parents("li").removeClass("disabled")},this)),this.updateButtonText()},select:function(e){e&&!t.isArray(e)&&(e=[e]);for(var i=0;i<e.length;i++){var s=e[i],l=this.getOptionByValue(s),n=this.getInputByValue(s);this.options.selectedClass&&n.parents("li").addClass(this.options.selectedClass),n.prop("checked",!0),l.prop("selected",!0),this.options.onChange(l,!0)}this.updateButtonText()},deselect:function(e){e&&!t.isArray(e)&&(e=[e]);for(var i=0;i<e.length;i++){var s=e[i],l=this.getOptionByValue(s),n=this.getInputByValue(s);this.options.selectedClass&&n.parents("li").removeClass(this.options.selectedClass),n.prop("checked",!1),l.prop("selected",!1),this.options.onChange(l,!1)}this.updateButtonText()},rebuild:function(){this.$ul.html(""),t('option[value="'+this.options.selectAllValue+'"]',this.$select).remove(),this.options.multiple="multiple"==this.$select.attr("multiple"),this.buildSelectAll(),this.buildDropdownOptions(),this.updateButtonText(),this.buildFilter()},dataprovider:function(t){var e="";t.forEach(function(t){e+='<option value="'+t.value+'">'+t.label+"</option>"}),this.$select.html(e),this.rebuild()},enable:function(){this.$select.prop("disabled",!1),this.$button.prop("disabled",!1).removeClass("disabled")},disable:function(){this.$select.prop("disabled",!0),this.$button.prop("disabled",!0).addClass("disabled")},setOptions:function(t){this.options=this.mergeOptions(t)},mergeOptions:function(e){return t.extend({},this.defaults,e)},updateButtonText:function(){var e=this.getSelected();t("button",this.$container).html(this.options.buttonText(e,this.$select)),t("button",this.$container).attr("title",this.options.buttonTitle(e,this.$select))},getSelected:function(){return t('option[value!="'+this.options.selectAllValue+'"]:selected',this.$select).filter(function(){return t(this).prop("selected")})},getOptionByValue:function(e){return t("option",this.$select).filter(function(){return t(this).val()==e})},getInputByValue:function(e){return t("li input",this.$ul).filter(function(){return t(this).val()==e})},updateOriginalOptions:function(){this.originalOptions=this.$select.clone()[0].options},asyncFunction:function(t,e,i){var s=Array.prototype.slice.call(arguments,3);return setTimeout(function(){t.apply(i||window,s)},e)}},t.fn.multiselect=function(i,s){return this.each(function(){var l=t(this).data("multiselect"),n="object"==typeof i&&i;l||t(this).data("multiselect",l=new e(this,n)),"string"==typeof i&&l[i](s)})},t.fn.multiselect.Constructor=e,t(function(){t("select[data-role=multiselect]").multiselect()})}(window.jQuery);